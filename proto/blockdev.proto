syntax = "proto3";
import "nanopb.proto";
import "mos_rpc.proto";

option (nanopb_fileopt).fallback_type = FT_POINTER;
option (nanopb_fileopt).enum_to_string = true;
option (nanopb_fileopt).proto3_singular_msgs = true;

package mos_rpc_blockdev;

message blockdev
{
    uint32 devid = 1;
}

message partition
{
    uint32 partid = 1;
}

message blockdev_info
{
    string name = 1;
    uint64 size = 2;
    uint32 block_size = 3;
    uint64 n_blocks = 4;
}

// blockdev manager interface

message register_device_request
{
    string server_name = 1;
    blockdev_info device_info = 2;
}

message register_device_response
{
    mos_rpc.result result = 1;
    uint32 id = 2;
}

message register_layer_server_request
{
    string server_name = 1;
    string layer_name = 2;
}

message register_layer_server_response
{
    mos_rpc.result result = 1;
    uint32 id = 2;
}

message query_device_info_request
{
    string device_name = 1;
}

message query_device_info_response
{
    mos_rpc.result result = 1;
    string layer_name = 2;
}

message read_block_request
{
    blockdev device = 1;
    uint64 n_boffset = 2;
    uint32 n_blocks = 3;
}

message read_block_response
{
    mos_rpc.result result = 1;
    bytes data = 2;
}

message write_block_request
{
    bytes data = 1;
    uint64 n_boffset = 2;
    uint32 n_blocks = 3;
}

message write_block_response
{
    mos_rpc.result result = 1;
    uint32 n_blocks = 2;
}

message open_device_request
{
    string device_name = 1;
}

message open_device_response
{
    mos_rpc.result result = 1;
    blockdev device = 2;
}

// layer interface

message probe_layers_request
{
    string base_layer = 1; // a path of /dev/block/layer_name
}

message probe_layers_response
{
    mos_rpc.result result = 1;
    partition parts = 2;
}

message get_layer_info_request
{
    string layer_name = 1;
}

message get_layer_info_response
{
    mos_rpc.result result = 1;
}
